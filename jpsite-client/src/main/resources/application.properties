## datasource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jp_admin?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
## spring boot tomcat
server.address=127.0.0.1
server.servlet.context-path=/
server.port=80
server.servlet.session.timeout=3
spring.session.timeout=10
## beetlsql
beetlsql.sqlPath=/sql
beetlsql.nameConversion=org.beetl.sql.core.UnderlinedNameConversion
beetl-beetlsql.dev=true
beetlsql.daoSuffix=Dao
bettlsql.basePackage=com
beetlsql.dbStyle=org.beetl.sql.core.db.MySqlStyle
## 启动自定义图案
server.undertow.accesslog.enabled=true
server.undertow.accesslog.dir=logs
spring.banner.charset=utf-8
spring.banner.location=banner.text
## 是否开启以下插件
jpsite.apollo.enable=false
jpsite.xxl.job.enable=false
jpsite.zookeeper.enable=false
jpsite.redis.enable=false
jpsite.autoSignUp.enable=false
## mongodb
#----spring.data.mongodb.uri=mongodb://127.0.0.1:27017/baike
## redis
#----None:禁止使用缓存采用 ,Simple:使用 Spring Boot 自带的缓存, redis:使用redis作为缓存
spring.cache.type=redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.jedis.pool.max-active=8
#----spring session会话使用redis管理存储
spring.session.store-type=redis
#----保存会话操作后立即更新到 Redis 中
spring.session.redis.flush-mode=IMMEDIATE
## log config
logging.config=classpath:logback.xml
logging.level.root=info
#----logging.level.org=warn
#----logging.level.org.springframework.data.mongodb=debug
## xxl-com.mty.jpsite.server.job
#----默认回调地址是 http://192.168.xxx.xxx:8080/xxl-com.mty.jpsite.server.job-admin，而默认的服务是没有 xxl-com.mty.jpsite.server.job-admin这个名称的。
xxl.com.mty.jpsite.server.job.admin.addresses=http://127.0.0.1:8089/xxl-com.mty.jpsite.server.job-admin
xxl.com.mty.jpsite.server.job.executor.appname=jpsite-com.mty.jpsite.server.job-simple
xxl.com.mty.jpsite.server.job.executor.ip=192.168.3.7
xxl.com.mty.jpsite.server.job.executor.port=9999
xxl.com.mty.jpsite.server.job.accessToken=
xxl.com.mty.jpsite.server.job.executor.logpath=/data/applogs/xxl-com.mty.jpsite.server.job/jobhandler
xxl.com.mty.jpsite.server.job.executor.logretentiondays=-1
## apollo配置中心
#----apollo.bootstrap.enabled=true
#----will inject 'application' and 'FX.apollo' namespaces in bootstrap phase
#----apollo.bootstrap.namespaces=application,FX.apollo
#----eureka.client.service-url.defaultZone=http://127.0.0.1:8080/eureka/
## security安全
spring.security.user.name=user
spring.security.user.password=1234
## 自定义登录页面
jpsite.security.browser.loginPage=/login_in_qq.html
jpsite.security.browser.loginType=JSON
jpsite.security.browser.signUpUrl=/demo_sign_up.html
jpsite.security.browser.signOutUrl=/login_out_success.html
jpsite.security.code.image.width=200
jpsite.security.code.image.height=20
jpsite.security.code.image.url=/getMe
jpsite.security.code.sms.length=5
## 开启actuator监控
#----设置监控服务端口
management.server.port=80
#----设置端点是否可用 默认只有shutdown可用
management.endpoints.enabled-by-default=true
#----设置是否暴露端点 默认只有health和info可见  * 包括所有端点
management.endpoints.web.exposure.include=*
## swagger配置
jpsite.swagger.title=jpsite-swagger-api
## elasticsearch 配置
#----spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
## security social第三方登录配置
jpsite.security.social.qq.app-id=101521573
jpsite.security.social.qq.app-secret=a9fd4005c5ee9657ba11ba284dd63375
jpsite.security.social.filterProcessesUrl=/qqLogin
jpsite.security.social.qq.providerId=qq
jpsite.security.social.weixin.app-id=wxd99431bbff8305a0
jpsite.security.social.weixin.app-secret=60f78681d063590a469f1b297feff3c4
spring.social.auto-connection-views=true
## zookeeper
zk.url=127.0.0.1:2181
## cache
springext.cache.redis.topic=cache

#mybatis-plus.config-location=/mybatis-config.xml
#mybatis-plus.mapper-locations=classpath*:/mappers/**/*.xml

security.oauth2.client.clientId = imooc
security.oauth2.client.clientSecret = imoocsecret

#jpsite.security.oauth2.clients[0].clientId = imooc
#jpsite.security.oauth2.clients[0].clientSecret = imoocsecret
#jpsite.security.oauth2.clients[0].accessTokenValidateSeconds = 3600
#jpsite.security.oauth2.clients[1].clientId = test
#jpsite.security.oauth2.clients[1].clientSecret = test